pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                echo 'Checked out the code successfully.'
                sh 'docker --version'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("my-python-app")
                    echo 'Docker image built successfully.'
                }
            }
        }

        stage('Run Application') {
            steps {
                script {
                    def image = docker.image("my-python-app")
                    sh "docker run -d --rm --name my-python-app -p 8888:5000 ${image.id}"
                }
                sleep 5
                echo "Checking application health on port 8888..."
                sh 'curl http://localhost:8888'
            }
            post {
                always {
                    echo "Stopping and cleaning up the container..."
                    sh 'docker stop my-python-app || true'
                }
            }
        }

        stage('Test') {
            steps {
                echo "Simulated test run here."
                // You can add real test commands like:
                // sh 'pytest tests/'
            }
        }
    }
}